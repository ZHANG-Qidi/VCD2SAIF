// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
// Version: 2020.2.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module aes_encrypt_KeySchedule (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        type_r,
        key_address0,
        key_ce0,
        key_q0,
        word_address0,
        word_ce0,
        word_we0,
        word_d0,
        word_q0,
        word_address1,
        word_ce1,
        word_we1,
        word_d1,
        word_q1
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_pp0_stage0 = 11'd2;
parameter    ap_ST_fsm_state4 = 11'd4;
parameter    ap_ST_fsm_pp1_stage0 = 11'd8;
parameter    ap_ST_fsm_pp1_stage1 = 11'd16;
parameter    ap_ST_fsm_pp1_stage2 = 11'd32;
parameter    ap_ST_fsm_pp1_stage3 = 11'd64;
parameter    ap_ST_fsm_pp1_stage4 = 11'd128;
parameter    ap_ST_fsm_pp1_stage5 = 11'd256;
parameter    ap_ST_fsm_pp1_stage6 = 11'd512;
parameter    ap_ST_fsm_state30 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] type_r;
output  [4:0] key_address0;
output   key_ce0;
input  [7:0] key_q0;
output  [8:0] word_address0;
output   word_ce0;
output   word_we0;
output  [7:0] word_d0;
input  [7:0] word_q0;
output  [8:0] word_address1;
output   word_ce1;
output   word_we1;
output  [7:0] word_d1;
input  [7:0] word_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg key_ce0;
reg[8:0] word_address0;
reg word_ce0;
reg word_we0;
reg[7:0] word_d0;
reg[8:0] word_address1;
reg word_ce1;
reg word_we1;
reg[7:0] word_d1;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] Sbox_address0;
reg    Sbox_ce0;
wire   [7:0] Sbox_q0;
reg   [7:0] Sbox_address1;
reg    Sbox_ce1;
wire   [7:0] Sbox_q1;
wire   [4:0] Rcon0_address0;
reg    Rcon0_ce0;
wire   [7:0] Rcon0_q0;
reg   [5:0] indvar_flatten_reg_424;
reg   [3:0] j_reg_435;
reg   [2:0] i_reg_446;
reg   [6:0] j_9_reg_457;
reg   [6:0] j_9_reg_457_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state12_pp1_stage0_iter1;
wire    ap_block_state19_pp1_stage0_iter2;
wire    ap_block_state26_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_11001;
reg   [6:0] j_9_reg_457_pp1_iter2_reg;
reg   [6:0] j_9_reg_457_pp1_iter3_reg;
reg   [7:0] reg_511;
wire    ap_CS_fsm_pp1_stage6;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_state11_pp1_stage6_iter0;
wire    ap_block_state18_pp1_stage6_iter1;
wire    ap_block_state25_pp1_stage6_iter2;
wire    ap_block_pp1_stage6_11001;
reg   [0:0] icmp_ln161_reg_1009;
reg   [0:0] icmp_ln161_reg_1009_pp1_iter2_reg;
reg   [0:0] icmp_ln164_reg_1018;
reg   [0:0] icmp_ln164_reg_1018_pp1_iter2_reg;
reg   [0:0] and_ln178_reg_1022;
reg   [0:0] and_ln178_reg_1022_pp1_iter2_reg;
reg   [7:0] reg_516;
reg   [7:0] reg_522;
reg    ap_enable_reg_pp1_iter3;
reg   [7:0] reg_528;
wire   [31:0] type_read_read_fu_106_p2;
wire   [6:0] zext_ln101_fu_534_p1;
reg   [6:0] zext_ln101_reg_941;
wire   [7:0] zext_ln154_fu_538_p1;
reg   [7:0] zext_ln154_reg_948;
wire   [5:0] tmp_s_fu_542_p3;
reg   [5:0] tmp_s_reg_953;
wire   [5:0] add_ln154_fu_550_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln154_fu_556_p2;
reg   [0:0] icmp_ln154_reg_963;
wire   [2:0] select_ln102_fu_573_p3;
reg   [2:0] select_ln102_reg_967;
wire   [3:0] select_ln102_1_fu_581_p3;
reg   [3:0] select_ln102_1_reg_972;
wire   [1:0] trunc_ln157_fu_589_p1;
reg   [1:0] trunc_ln157_reg_978;
wire   [2:0] add_ln155_fu_610_p2;
wire   [7:0] mul15_fu_662_p2;
reg   [7:0] mul15_reg_993;
wire    ap_CS_fsm_state4;
wire   [0:0] cmp130_fu_668_p2;
reg   [0:0] cmp130_reg_998;
wire   [7:0] j_9_cast_fu_674_p1;
reg   [7:0] j_9_cast_reg_1003;
reg   [7:0] j_9_cast_reg_1003_pp1_iter1_reg;
reg   [7:0] j_9_cast_reg_1003_pp1_iter2_reg;
reg   [7:0] j_9_cast_reg_1003_pp1_iter3_reg;
wire   [0:0] icmp_ln161_fu_678_p2;
reg   [0:0] icmp_ln161_reg_1009_pp1_iter1_reg;
reg   [0:0] icmp_ln161_reg_1009_pp1_iter3_reg;
wire   [6:0] j_11_fu_688_p2;
reg   [6:0] j_11_reg_1013;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln164_fu_698_p2;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_state8_pp1_stage3_iter0;
wire    ap_block_state15_pp1_stage3_iter1;
wire    ap_block_state22_pp1_stage3_iter2;
wire    ap_block_state29_pp1_stage3_iter3;
wire    ap_block_pp1_stage3_11001;
wire   [0:0] and_ln178_fu_710_p2;
wire   [6:0] idxprom22_fu_720_p2;
reg   [6:0] idxprom22_reg_1026;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_state9_pp1_stage4_iter0;
wire    ap_block_state16_pp1_stage4_iter1;
wire    ap_block_state23_pp1_stage4_iter2;
wire    ap_block_pp1_stage4_11001;
wire   [8:0] zext_ln174_fu_726_p1;
reg   [8:0] zext_ln174_reg_1031;
wire    ap_CS_fsm_pp1_stage5;
wire    ap_block_state10_pp1_stage5_iter0;
wire    ap_block_state17_pp1_stage5_iter1;
wire    ap_block_state24_pp1_stage5_iter2;
wire    ap_block_pp1_stage5_11001;
reg   [7:0] temp_1_1_reg_1056;
reg   [7:0] temp_2_1_reg_1061;
wire   [4:0] grp_fu_715_p2;
reg   [4:0] udiv_ln166_reg_1106;
wire  signed [7:0] sub158_fu_810_p2;
reg  signed [7:0] sub158_reg_1121;
reg   [7:0] word_load_reg_1151;
reg   [7:0] word_load_14_reg_1156;
wire   [7:0] temp_0_fu_869_p2;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state6_pp1_stage1_iter0;
wire    ap_block_state13_pp1_stage1_iter1;
wire    ap_block_state20_pp1_stage1_iter2;
wire    ap_block_state27_pp1_stage1_iter3;
wire    ap_block_pp1_stage1_11001;
reg   [7:0] word_load_15_reg_1166;
reg   [7:0] word_load_16_reg_1171;
wire   [8:0] zext_ln184_3_fu_880_p1;
reg   [8:0] zext_ln184_3_reg_1176;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state7_pp1_stage2_iter0;
wire    ap_block_state14_pp1_stage2_iter1;
wire    ap_block_state21_pp1_stage2_iter2;
wire    ap_block_state28_pp1_stage2_iter3;
wire    ap_block_pp1_stage2_11001;
wire   [7:0] xor_ln184_1_fu_901_p2;
reg   [7:0] xor_ln184_1_reg_1181;
wire   [7:0] xor_ln184_2_fu_906_p2;
reg   [7:0] xor_ln184_2_reg_1186;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage6_subdone;
wire    ap_block_pp1_stage3_subdone;
reg   [3:0] nb_reg_325;
reg   [3:0] ap_phi_mux_nk_phi_fu_361_p18;
reg   [3:0] nk_reg_358;
reg   [3:0] round_val_reg_391;
reg   [3:0] ap_phi_mux_j_phi_fu_439_p4;
wire    ap_block_pp0_stage0;
reg   [6:0] ap_phi_mux_j_9_phi_fu_460_p4;
wire    ap_block_pp1_stage0;
wire   [7:0] ap_phi_reg_pp1_iter0_temp_3_0_reg_467;
reg   [7:0] ap_phi_reg_pp1_iter1_temp_3_0_reg_467;
reg   [7:0] ap_phi_reg_pp1_iter2_temp_3_0_reg_467;
reg   [7:0] ap_phi_reg_pp1_iter3_temp_3_0_reg_467;
wire   [7:0] ap_phi_reg_pp1_iter0_temp_2_0_reg_478;
reg   [7:0] ap_phi_reg_pp1_iter1_temp_2_0_reg_478;
reg   [7:0] ap_phi_reg_pp1_iter2_temp_2_0_reg_478;
reg   [7:0] ap_phi_reg_pp1_iter3_temp_2_0_reg_478;
wire   [7:0] ap_phi_reg_pp1_iter0_temp_1_0_reg_489;
reg   [7:0] ap_phi_reg_pp1_iter1_temp_1_0_reg_489;
reg   [7:0] ap_phi_reg_pp1_iter2_temp_1_0_reg_489;
reg   [7:0] ap_phi_reg_pp1_iter3_temp_1_0_reg_489;
wire   [7:0] ap_phi_reg_pp1_iter0_temp_0_0_reg_500;
reg   [7:0] ap_phi_reg_pp1_iter1_temp_0_0_reg_500;
reg   [7:0] ap_phi_reg_pp1_iter2_temp_0_0_reg_500;
reg   [7:0] ap_phi_reg_pp1_iter3_temp_0_0_reg_500;
wire   [63:0] zext_ln157_fu_605_p1;
wire   [63:0] zext_ln157_2_fu_649_p1;
wire   [63:0] zext_ln174_2_fu_740_p1;
wire    ap_block_pp1_stage4;
wire   [63:0] zext_ln175_fu_751_p1;
wire   [63:0] zext_ln176_fu_765_p1;
wire    ap_block_pp1_stage5;
wire   [63:0] idxprom22_cast_fu_756_p1;
wire   [63:0] zext_ln181_1_fu_770_p1;
wire   [63:0] zext_ln181_2_fu_775_p1;
wire   [63:0] zext_ln166_fu_780_p1;
wire   [63:0] zext_ln167_fu_785_p1;
wire   [63:0] zext_ln181_fu_790_p1;
wire    ap_block_pp1_stage6;
wire   [63:0] zext_ln181_3_fu_795_p1;
wire   [63:0] zext_ln168_fu_800_p1;
wire   [63:0] zext_ln169_fu_805_p1;
wire  signed [63:0] idxprom159_fu_814_p1;
wire   [63:0] zext_ln184_fu_825_p1;
wire   [63:0] zext_ln166_1_fu_839_p1;
wire   [63:0] zext_ln184_1_fu_853_p1;
wire   [63:0] zext_ln184_2_fu_864_p1;
wire   [63:0] idxprom169_fu_875_p1;
wire    ap_block_pp1_stage2;
wire   [63:0] zext_ln184_6_fu_890_p1;
wire   [63:0] zext_ln184_4_fu_922_p1;
wire    ap_block_pp1_stage3;
wire   [63:0] zext_ln184_5_fu_932_p1;
wire   [7:0] xor_ln184_fu_895_p2;
wire   [7:0] xor_ln184_3_fu_911_p2;
wire   [0:0] icmp_ln155_fu_567_p2;
wire   [3:0] j_10_fu_561_p2;
wire   [2:0] trunc_ln157_1_fu_593_p1;
wire   [4:0] add_ln_fu_597_p3;
wire   [5:0] tmp_1_fu_626_p3;
wire   [8:0] tmp_16_cast_fu_619_p3;
wire   [8:0] zext_ln157_1_fu_633_p1;
wire   [8:0] sub_ln157_fu_637_p2;
wire   [8:0] select_ln102_1_cast_fu_616_p1;
wire   [8:0] add_ln157_fu_643_p2;
wire   [3:0] mul15_fu_662_p0;
wire   [3:0] mul15_fu_662_p1;
wire   [3:0] grp_fu_683_p1;
wire   [2:0] grp_fu_683_p2;
wire   [2:0] trunc_ln164_fu_694_p1;
wire   [0:0] icmp_ln178_fu_704_p2;
wire   [3:0] grp_fu_715_p1;
wire   [7:0] zext_ln174_1_fu_730_p1;
wire   [7:0] add_ln174_fu_734_p2;
wire   [8:0] add_ln175_fu_745_p2;
wire   [8:0] add_ln176_fu_760_p2;
wire   [7:0] add_ln184_fu_819_p2;
wire   [4:0] trunc_ln166_fu_830_p1;
wire   [4:0] add_ln166_fu_833_p2;
wire  signed [8:0] sext_ln184_fu_844_p1;
wire   [8:0] add_ln184_1_fu_847_p2;
wire   [8:0] add_ln184_2_fu_858_p2;
wire    ap_block_pp1_stage1;
wire   [8:0] add_ln184_5_fu_884_p2;
wire   [7:0] add_ln184_3_fu_917_p2;
wire   [8:0] add_ln184_4_fu_927_p2;
wire    ap_CS_fsm_state30;
reg   [10:0] ap_NS_fsm;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_pp1_stage4_subdone;
wire    ap_block_pp1_stage5_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [7:0] mul15_fu_662_p00;
wire   [7:0] mul15_fu_662_p10;
reg    ap_condition_1016;
reg    ap_condition_1019;
reg    ap_condition_1024;
reg    ap_condition_1027;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

aes_encrypt_KeySchedule_Sbox #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Sbox_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Sbox_address0),
    .ce0(Sbox_ce0),
    .q0(Sbox_q0),
    .address1(Sbox_address1),
    .ce1(Sbox_ce1),
    .q1(Sbox_q1)
);

aes_encrypt_KeySchedule_Rcon0 #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
Rcon0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Rcon0_address0),
    .ce0(Rcon0_ce0),
    .q0(Rcon0_q0)
);

aes_encrypt_mul_4ns_4ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
mul_4ns_4ns_8_1_1_U1(
    .din0(mul15_fu_662_p0),
    .din1(mul15_fu_662_p1),
    .dout(mul15_fu_662_p2)
);

aes_encrypt_urem_7ns_4ns_3_11_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_7ns_4ns_3_11_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_j_9_phi_fu_460_p4),
    .din1(grp_fu_683_p1),
    .ce(1'b1),
    .dout(grp_fu_683_p2)
);

aes_encrypt_udiv_7ns_4ns_5_11_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 5 ))
udiv_7ns_4ns_5_11_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(j_9_reg_457_pp1_iter1_reg),
    .din1(grp_fu_715_p1),
    .ce(1'b1),
    .dout(grp_fu_715_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ((type_read_read_fu_106_p2 == 32'd128128) | ((type_read_read_fu_106_p2 == 32'd128192) | ((type_read_read_fu_106_p2 == 32'd128256) | ((type_read_read_fu_106_p2 == 32'd192128) | ((type_read_read_fu_106_p2 == 32'd192192) | ((type_read_read_fu_106_p2 == 32'd192256) | ((type_read_read_fu_106_p2 == 32'd256128) | ((type_read_read_fu_106_p2 == 32'd256192) | (type_read_read_fu_106_p2 == 32'd256256))))))))))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ((type_read_read_fu_106_p2 == 32'd128128) | ((type_read_read_fu_106_p2 == 32'd128192) | ((type_read_read_fu_106_p2 == 32'd128256) | ((type_read_read_fu_106_p2 == 32'd192128) | ((type_read_read_fu_106_p2 == 32'd192192) | ((type_read_read_fu_106_p2 == 32'd192256) | ((type_read_read_fu_106_p2 == 32'd256128) | ((type_read_read_fu_106_p2 == 32'd256192) | (type_read_read_fu_106_p2 == 32'd256256))))))))))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage6_subdone) & (1'b1 == ap_CS_fsm_pp1_stage6))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage6_subdone) & (1'b1 == ap_CS_fsm_pp1_stage6))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage3_subdone) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b0 == ap_block_pp1_stage6_subdone) & (1'b1 == ap_CS_fsm_pp1_stage6)))) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'd0 == and_ln178_reg_1022_pp1_iter2_reg) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd0) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_reg_pp1_iter3_temp_0_0_reg_500 <= word_q1;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd0) & (1'd1 == and_ln178_reg_1022_pp1_iter2_reg) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1))) begin
        ap_phi_reg_pp1_iter3_temp_0_0_reg_500 <= Sbox_q1;
    end else if (((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln161_reg_1009_pp1_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd1))) begin
        ap_phi_reg_pp1_iter3_temp_0_0_reg_500 <= temp_0_fu_869_p2;
    end else if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_reg_pp1_iter3_temp_0_0_reg_500 <= ap_phi_reg_pp1_iter2_temp_0_0_reg_500;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'd0 == and_ln178_reg_1022_pp1_iter2_reg) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd0) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_reg_pp1_iter3_temp_1_0_reg_489 <= temp_1_1_reg_1056;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd0) & (1'd1 == and_ln178_reg_1022_pp1_iter2_reg) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1))) begin
        ap_phi_reg_pp1_iter3_temp_1_0_reg_489 <= reg_511;
    end else if (((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln161_reg_1009_pp1_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd1))) begin
        ap_phi_reg_pp1_iter3_temp_1_0_reg_489 <= reg_516;
    end else if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_reg_pp1_iter3_temp_1_0_reg_489 <= ap_phi_reg_pp1_iter2_temp_1_0_reg_489;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'd0 == and_ln178_reg_1022_pp1_iter2_reg) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd0) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_reg_pp1_iter3_temp_2_0_reg_478 <= temp_2_1_reg_1061;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd0) & (1'd1 == and_ln178_reg_1022_pp1_iter2_reg) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1))) begin
        ap_phi_reg_pp1_iter3_temp_2_0_reg_478 <= reg_516;
    end else if (((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln161_reg_1009_pp1_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd1))) begin
        ap_phi_reg_pp1_iter3_temp_2_0_reg_478 <= reg_522;
    end else if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_reg_pp1_iter3_temp_2_0_reg_478 <= ap_phi_reg_pp1_iter2_temp_2_0_reg_478;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'd0 == and_ln178_reg_1022_pp1_iter2_reg) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd0) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_reg_pp1_iter3_temp_3_0_reg_467 <= word_q0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd0) & (1'd1 == and_ln178_reg_1022_pp1_iter2_reg) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1))) begin
        ap_phi_reg_pp1_iter3_temp_3_0_reg_467 <= Sbox_q0;
    end else if (((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln161_reg_1009_pp1_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd1))) begin
        ap_phi_reg_pp1_iter3_temp_3_0_reg_467 <= reg_528;
    end else if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_reg_pp1_iter3_temp_3_0_reg_467 <= ap_phi_reg_pp1_iter2_temp_3_0_reg_467;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_fu_556_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_reg_446 <= add_ln155_fu_610_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ((type_read_read_fu_106_p2 == 32'd128128) | ((type_read_read_fu_106_p2 == 32'd128192) | ((type_read_read_fu_106_p2 == 32'd128256) | ((type_read_read_fu_106_p2 == 32'd192128) | ((type_read_read_fu_106_p2 == 32'd192192) | ((type_read_read_fu_106_p2 == 32'd192256) | ((type_read_read_fu_106_p2 == 32'd256128) | ((type_read_read_fu_106_p2 == 32'd256192) | (type_read_read_fu_106_p2 == 32'd256256))))))))))) begin
        i_reg_446 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_fu_556_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_reg_424 <= add_ln154_fu_550_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ((type_read_read_fu_106_p2 == 32'd128128) | ((type_read_read_fu_106_p2 == 32'd128192) | ((type_read_read_fu_106_p2 == 32'd128256) | ((type_read_read_fu_106_p2 == 32'd192128) | ((type_read_read_fu_106_p2 == 32'd192192) | ((type_read_read_fu_106_p2 == 32'd192256) | ((type_read_read_fu_106_p2 == 32'd256128) | ((type_read_read_fu_106_p2 == 32'd256192) | (type_read_read_fu_106_p2 == 32'd256256))))))))))) begin
        indvar_flatten_reg_424 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_9_reg_457 <= zext_ln101_reg_941;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln161_reg_1009 == 1'd1))) begin
        j_9_reg_457 <= j_11_reg_1013;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_reg_963 == 1'd0))) begin
        j_reg_435 <= select_ln102_1_reg_972;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ((type_read_read_fu_106_p2 == 32'd128128) | ((type_read_read_fu_106_p2 == 32'd128192) | ((type_read_read_fu_106_p2 == 32'd128256) | ((type_read_read_fu_106_p2 == 32'd192128) | ((type_read_read_fu_106_p2 == 32'd192192) | ((type_read_read_fu_106_p2 == 32'd192256) | ((type_read_read_fu_106_p2 == 32'd256128) | ((type_read_read_fu_106_p2 == 32'd256192) | (type_read_read_fu_106_p2 == 32'd256256))))))))))) begin
        j_reg_435 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd128128)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd192128)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd256128)))) begin
                nb_reg_325[1] <= 1'b0;
        nb_reg_325[2] <= 1'b1;
        nb_reg_325[3] <= 1'b0;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd128192)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd192192)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd256192)))) begin
                nb_reg_325[1] <= 1'b1;
        nb_reg_325[2] <= 1'b1;
        nb_reg_325[3] <= 1'b0;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd128256)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd192256)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd256256)))) begin
                nb_reg_325[1] <= 1'b0;
        nb_reg_325[2] <= 1'b0;
        nb_reg_325[3] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd128128)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd128192)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd128256)))) begin
                nk_reg_358[1] <= 1'b0;
        nk_reg_358[2] <= 1'b1;
        nk_reg_358[3] <= 1'b0;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd192128)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd192192)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd192256)))) begin
                nk_reg_358[1] <= 1'b1;
        nk_reg_358[2] <= 1'b1;
        nk_reg_358[3] <= 1'b0;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd256128)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd256192)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd256256)))) begin
                nk_reg_358[1] <= 1'b0;
        nk_reg_358[2] <= 1'b0;
        nk_reg_358[3] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd128128))) begin
                round_val_reg_391[1] <= 1'b1;
        round_val_reg_391[2] <= 1'b0;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd128192)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd192128)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd192192)))) begin
                round_val_reg_391[1] <= 1'b0;
        round_val_reg_391[2] <= 1'b1;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd128256)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd192256)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd256128)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd256192)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (type_read_read_fu_106_p2 == 32'd256256)))) begin
                round_val_reg_391[1] <= 1'b1;
        round_val_reg_391[2] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (icmp_ln164_fu_698_p2 == 1'd0) & (icmp_ln161_reg_1009_pp1_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        and_ln178_reg_1022 <= and_ln178_fu_710_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        and_ln178_reg_1022_pp1_iter2_reg <= and_ln178_reg_1022;
        icmp_ln164_reg_1018_pp1_iter2_reg <= icmp_ln164_reg_1018;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage6_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6))) begin
        ap_phi_reg_pp1_iter1_temp_0_0_reg_500 <= ap_phi_reg_pp1_iter0_temp_0_0_reg_500;
        ap_phi_reg_pp1_iter1_temp_1_0_reg_489 <= ap_phi_reg_pp1_iter0_temp_1_0_reg_489;
        ap_phi_reg_pp1_iter1_temp_2_0_reg_478 <= ap_phi_reg_pp1_iter0_temp_2_0_reg_478;
        ap_phi_reg_pp1_iter1_temp_3_0_reg_467 <= ap_phi_reg_pp1_iter0_temp_3_0_reg_467;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage6_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6))) begin
        ap_phi_reg_pp1_iter2_temp_0_0_reg_500 <= ap_phi_reg_pp1_iter1_temp_0_0_reg_500;
        ap_phi_reg_pp1_iter2_temp_1_0_reg_489 <= ap_phi_reg_pp1_iter1_temp_1_0_reg_489;
        ap_phi_reg_pp1_iter2_temp_2_0_reg_478 <= ap_phi_reg_pp1_iter1_temp_2_0_reg_478;
        ap_phi_reg_pp1_iter2_temp_3_0_reg_467 <= ap_phi_reg_pp1_iter1_temp_3_0_reg_467;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cmp130_reg_998 <= cmp130_fu_668_p2;
        mul15_reg_993 <= mul15_fu_662_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln154_reg_963 <= icmp_ln154_fu_556_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln161_reg_1009 <= icmp_ln161_fu_678_p2;
        icmp_ln161_reg_1009_pp1_iter1_reg <= icmp_ln161_reg_1009;
        icmp_ln161_reg_1009_pp1_iter2_reg <= icmp_ln161_reg_1009_pp1_iter1_reg;
        icmp_ln161_reg_1009_pp1_iter3_reg <= icmp_ln161_reg_1009_pp1_iter2_reg;
        j_9_cast_reg_1003[6 : 0] <= j_9_cast_fu_674_p1[6 : 0];
        j_9_cast_reg_1003_pp1_iter1_reg[6 : 0] <= j_9_cast_reg_1003[6 : 0];
        j_9_cast_reg_1003_pp1_iter2_reg[6 : 0] <= j_9_cast_reg_1003_pp1_iter1_reg[6 : 0];
        j_9_cast_reg_1003_pp1_iter3_reg[6 : 0] <= j_9_cast_reg_1003_pp1_iter2_reg[6 : 0];
        j_9_reg_457_pp1_iter1_reg <= j_9_reg_457;
        j_9_reg_457_pp1_iter2_reg <= j_9_reg_457_pp1_iter1_reg;
        j_9_reg_457_pp1_iter3_reg <= j_9_reg_457_pp1_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (icmp_ln161_reg_1009_pp1_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        icmp_ln164_reg_1018 <= icmp_ln164_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1))) begin
        idxprom22_reg_1026 <= idxprom22_fu_720_p2;
        zext_ln174_reg_1031[6 : 0] <= zext_ln174_fu_726_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage6_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (icmp_ln161_reg_1009 == 1'd1))) begin
        j_11_reg_1013 <= j_11_fu_688_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd1) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd0) & (1'd1 == and_ln178_reg_1022_pp1_iter2_reg) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        reg_511 <= Sbox_q1;
        reg_516 <= Sbox_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd1) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd0) & (1'd1 == and_ln178_reg_1022_pp1_iter2_reg) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1)))) begin
        reg_522 <= Sbox_q1;
        reg_528 <= Sbox_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_fu_556_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln102_1_reg_972 <= select_ln102_1_fu_581_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_fu_556_p2 == 1'd0))) begin
        select_ln102_reg_967 <= select_ln102_fu_573_p3;
        trunc_ln157_reg_978 <= trunc_ln157_fu_589_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1))) begin
        sub158_reg_1121 <= sub158_fu_810_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        temp_1_1_reg_1056 <= word_q0;
        temp_2_1_reg_1061 <= word_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & ((type_read_read_fu_106_p2 == 32'd128128) | ((type_read_read_fu_106_p2 == 32'd128192) | ((type_read_read_fu_106_p2 == 32'd128256) | ((type_read_read_fu_106_p2 == 32'd192128) | ((type_read_read_fu_106_p2 == 32'd192192) | ((type_read_read_fu_106_p2 == 32'd192256) | ((type_read_read_fu_106_p2 == 32'd256128) | ((type_read_read_fu_106_p2 == 32'd256192) | (type_read_read_fu_106_p2 == 32'd256256))))))))))) begin
        tmp_s_reg_953[5 : 2] <= tmp_s_fu_542_p3[5 : 2];
        zext_ln101_reg_941[3 : 0] <= zext_ln101_fu_534_p1[3 : 0];
        zext_ln154_reg_948[3 : 0] <= zext_ln154_fu_538_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd1) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1))) begin
        udiv_ln166_reg_1106 <= grp_fu_715_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1))) begin
        word_load_14_reg_1156 <= word_q1;
        word_load_reg_1151 <= word_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln161_reg_1009_pp1_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        word_load_15_reg_1166 <= word_q1;
        word_load_16_reg_1171 <= word_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln161_reg_1009_pp1_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        xor_ln184_1_reg_1181 <= xor_ln184_1_fu_901_p2;
        xor_ln184_2_reg_1186 <= xor_ln184_2_fu_906_p2;
        zext_ln184_3_reg_1176[6 : 0] <= zext_ln184_3_fu_880_p1[6 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        Rcon0_ce0 = 1'b1;
    end else begin
        Rcon0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        if ((1'b1 == ap_condition_1027)) begin
            Sbox_address0 = zext_ln169_fu_805_p1;
        end else if ((1'b1 == ap_condition_1024)) begin
            Sbox_address0 = zext_ln181_3_fu_795_p1;
        end else if ((1'b1 == ap_condition_1019)) begin
            Sbox_address0 = zext_ln167_fu_785_p1;
        end else if ((1'b1 == ap_condition_1016)) begin
            Sbox_address0 = zext_ln181_2_fu_775_p1;
        end else begin
            Sbox_address0 = 'bx;
        end
    end else begin
        Sbox_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        if ((1'b1 == ap_condition_1027)) begin
            Sbox_address1 = zext_ln168_fu_800_p1;
        end else if ((1'b1 == ap_condition_1024)) begin
            Sbox_address1 = zext_ln181_fu_790_p1;
        end else if ((1'b1 == ap_condition_1019)) begin
            Sbox_address1 = zext_ln166_fu_780_p1;
        end else if ((1'b1 == ap_condition_1016)) begin
            Sbox_address1 = zext_ln181_1_fu_770_p1;
        end else begin
            Sbox_address1 = 'bx;
        end
    end else begin
        Sbox_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd1) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd0) & (1'd1 == and_ln178_reg_1022_pp1_iter2_reg) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd1) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd0) & (1'd1 == and_ln178_reg_1022_pp1_iter2_reg) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        Sbox_ce0 = 1'b1;
    end else begin
        Sbox_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd1) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd0) & (1'd1 == and_ln178_reg_1022_pp1_iter2_reg) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd1) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd0) & (1'd1 == and_ln178_reg_1022_pp1_iter2_reg) & (icmp_ln161_reg_1009_pp1_iter2_reg == 1'd1) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        Sbox_ce1 = 1'b1;
    end else begin
        Sbox_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln154_fu_556_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln161_fu_678_p2 == 1'd0)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln161_reg_1009 == 1'd1))) begin
        ap_phi_mux_j_9_phi_fu_460_p4 = j_11_reg_1013;
    end else begin
        ap_phi_mux_j_9_phi_fu_460_p4 = j_9_reg_457;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_reg_963 == 1'd0))) begin
        ap_phi_mux_j_phi_fu_439_p4 = select_ln102_1_reg_972;
    end else begin
        ap_phi_mux_j_phi_fu_439_p4 = j_reg_435;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd128128)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd128192)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd128256)))) begin
        ap_phi_mux_nk_phi_fu_361_p18 = 4'd4;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd192128)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd192192)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd192256)))) begin
        ap_phi_mux_nk_phi_fu_361_p18 = 4'd6;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd256128)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd256192)) | ((1'b1 == ap_CS_fsm_state1) & (type_read_read_fu_106_p2 == 32'd256256)))) begin
        ap_phi_mux_nk_phi_fu_361_p18 = 4'd8;
    end else begin
        ap_phi_mux_nk_phi_fu_361_p18 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        key_ce0 = 1'b1;
    end else begin
        key_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        word_address0 = zext_ln184_4_fu_922_p1;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        word_address0 = idxprom169_fu_875_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        word_address0 = zext_ln184_2_fu_864_p1;
    end else if (((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        word_address0 = idxprom159_fu_814_p1;
    end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        word_address0 = zext_ln176_fu_765_p1;
    end else if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        word_address0 = zext_ln174_2_fu_740_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        word_address0 = zext_ln157_2_fu_649_p1;
    end else begin
        word_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        word_address1 = zext_ln184_5_fu_932_p1;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        word_address1 = zext_ln184_6_fu_890_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        word_address1 = zext_ln184_1_fu_853_p1;
    end else if (((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        word_address1 = zext_ln184_fu_825_p1;
    end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        word_address1 = idxprom22_cast_fu_756_p1;
    end else if (((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        word_address1 = zext_ln175_fu_751_p1;
    end else begin
        word_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        word_ce0 = 1'b1;
    end else begin
        word_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        word_ce1 = 1'b1;
    end else begin
        word_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        word_d0 = xor_ln184_1_reg_1181;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        word_d0 = xor_ln184_fu_895_p2;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        word_d0 = key_q0;
    end else begin
        word_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            word_d1 = xor_ln184_2_reg_1186;
        end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            word_d1 = xor_ln184_3_fu_911_p2;
        end else begin
            word_d1 = 'bx;
        end
    end else begin
        word_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln161_reg_1009_pp1_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (icmp_ln161_reg_1009_pp1_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln154_reg_963 == 1'd0)))) begin
        word_we0 = 1'b1;
    end else begin
        word_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln161_reg_1009_pp1_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (icmp_ln161_reg_1009_pp1_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
        word_we1 = 1'b1;
    end else begin
        word_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ((type_read_read_fu_106_p2 == 32'd128128) | ((type_read_read_fu_106_p2 == 32'd128192) | ((type_read_read_fu_106_p2 == 32'd128256) | ((type_read_read_fu_106_p2 == 32'd192128) | ((type_read_read_fu_106_p2 == 32'd192192) | ((type_read_read_fu_106_p2 == 32'd192256) | ((type_read_read_fu_106_p2 == 32'd256128) | ((type_read_read_fu_106_p2 == 32'd256192) | (type_read_read_fu_106_p2 == 32'd256256))))))))))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~(type_read_read_fu_106_p2 == 32'd128128) & ~(type_read_read_fu_106_p2 == 32'd128192) & ~(type_read_read_fu_106_p2 == 32'd128256) & ~(type_read_read_fu_106_p2 == 32'd192128) & ~(type_read_read_fu_106_p2 == 32'd192192) & ~(type_read_read_fu_106_p2 == 32'd192256) & ~(type_read_read_fu_106_p2 == 32'd256128) & ~(type_read_read_fu_106_p2 == 32'd256192) & ~(type_read_read_fu_106_p2 == 32'd256256) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln154_fu_556_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln154_fu_556_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln161_fu_678_p2 == 1'd0)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln161_fu_678_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((~((1'b0 == ap_block_pp1_stage3_subdone) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b0)) & (1'b0 == ap_block_pp1_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else if (((1'b0 == ap_block_pp1_stage3_subdone) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((1'b0 == ap_block_pp1_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_pp1_stage5 : begin
            if ((1'b0 == ap_block_pp1_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end
        end
        ap_ST_fsm_pp1_stage6 : begin
            if ((1'b0 == ap_block_pp1_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Rcon0_address0 = zext_ln166_1_fu_839_p1;

assign add_ln154_fu_550_p2 = (indvar_flatten_reg_424 + 6'd1);

assign add_ln155_fu_610_p2 = (select_ln102_fu_573_p3 + 3'd1);

assign add_ln157_fu_643_p2 = (sub_ln157_fu_637_p2 + select_ln102_1_cast_fu_616_p1);

assign add_ln166_fu_833_p2 = ($signed(trunc_ln166_fu_830_p1) + $signed(5'd31));

assign add_ln174_fu_734_p2 = (zext_ln174_1_fu_730_p1 + 8'd120);

assign add_ln175_fu_745_p2 = (zext_ln174_fu_726_p1 + 9'd240);

assign add_ln176_fu_760_p2 = ($signed(zext_ln174_reg_1031) + $signed(9'd360));

assign add_ln184_1_fu_847_p2 = ($signed(sext_ln184_fu_844_p1) + $signed(9'd240));

assign add_ln184_2_fu_858_p2 = ($signed(sext_ln184_fu_844_p1) + $signed(9'd360));

assign add_ln184_3_fu_917_p2 = (j_9_cast_reg_1003_pp1_iter3_reg + 8'd120);

assign add_ln184_4_fu_927_p2 = (zext_ln184_3_reg_1176 + 9'd240);

assign add_ln184_5_fu_884_p2 = ($signed(zext_ln184_3_fu_880_p1) + $signed(9'd360));

assign add_ln184_fu_819_p2 = ($signed(sub158_fu_810_p2) + $signed(8'd120));

assign add_ln_fu_597_p3 = {{trunc_ln157_1_fu_593_p1}, {trunc_ln157_fu_589_p1}};

assign and_ln178_fu_710_p2 = (icmp_ln178_fu_704_p2 & cmp130_reg_998);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp1_stage5 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage6 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1016 = ((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd0) & (1'd1 == and_ln178_reg_1022_pp1_iter2_reg));
end

always @ (*) begin
    ap_condition_1019 = ((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_condition_1024 = ((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd0) & (1'd1 == and_ln178_reg_1022_pp1_iter2_reg));
end

always @ (*) begin
    ap_condition_1027 = ((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (icmp_ln164_reg_1018_pp1_iter2_reg == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp1_iter0_temp_0_0_reg_500 = 'bx;

assign ap_phi_reg_pp1_iter0_temp_1_0_reg_489 = 'bx;

assign ap_phi_reg_pp1_iter0_temp_2_0_reg_478 = 'bx;

assign ap_phi_reg_pp1_iter0_temp_3_0_reg_467 = 'bx;

assign cmp130_fu_668_p2 = ((nk_reg_358 > 4'd6) ? 1'b1 : 1'b0);

assign grp_fu_683_p1 = zext_ln101_reg_941;

assign grp_fu_715_p1 = zext_ln101_reg_941;

assign icmp_ln154_fu_556_p2 = ((indvar_flatten_reg_424 == tmp_s_reg_953) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_567_p2 = ((i_reg_446 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln161_fu_678_p2 = ((j_9_cast_fu_674_p1 < mul15_reg_993) ? 1'b1 : 1'b0);

assign icmp_ln164_fu_698_p2 = ((trunc_ln164_fu_694_p1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln178_fu_704_p2 = ((trunc_ln164_fu_694_p1 == 3'd4) ? 1'b1 : 1'b0);

assign idxprom159_fu_814_p1 = sub158_fu_810_p2;

assign idxprom169_fu_875_p1 = j_9_reg_457_pp1_iter3_reg;

assign idxprom22_cast_fu_756_p1 = idxprom22_reg_1026;

assign idxprom22_fu_720_p2 = ($signed(j_9_reg_457_pp1_iter2_reg) + $signed(7'd127));

assign j_10_fu_561_p2 = (ap_phi_mux_j_phi_fu_439_p4 + 4'd1);

assign j_11_fu_688_p2 = (j_9_reg_457 + 7'd1);

assign j_9_cast_fu_674_p1 = ap_phi_mux_j_9_phi_fu_460_p4;

assign key_address0 = zext_ln157_fu_605_p1;

assign mul15_fu_662_p0 = mul15_fu_662_p00;

assign mul15_fu_662_p00 = round_val_reg_391;

assign mul15_fu_662_p1 = mul15_fu_662_p10;

assign mul15_fu_662_p10 = nb_reg_325;

assign select_ln102_1_cast_fu_616_p1 = select_ln102_1_reg_972;

assign select_ln102_1_fu_581_p3 = ((icmp_ln155_fu_567_p2[0:0] == 1'b1) ? j_10_fu_561_p2 : ap_phi_mux_j_phi_fu_439_p4);

assign select_ln102_fu_573_p3 = ((icmp_ln155_fu_567_p2[0:0] == 1'b1) ? 3'd0 : i_reg_446);

assign sext_ln184_fu_844_p1 = sub158_reg_1121;

assign sub158_fu_810_p2 = (j_9_cast_reg_1003_pp1_iter2_reg - zext_ln154_reg_948);

assign sub_ln157_fu_637_p2 = (tmp_16_cast_fu_619_p3 - zext_ln157_1_fu_633_p1);

assign temp_0_fu_869_p2 = (reg_511 ^ Rcon0_q0);

assign tmp_16_cast_fu_619_p3 = {{trunc_ln157_reg_978}, {7'd0}};

assign tmp_1_fu_626_p3 = {{select_ln102_reg_967}, {3'd0}};

assign tmp_s_fu_542_p3 = {{ap_phi_mux_nk_phi_fu_361_p18}, {2'd0}};

assign trunc_ln157_1_fu_593_p1 = select_ln102_1_fu_581_p3[2:0];

assign trunc_ln157_fu_589_p1 = select_ln102_fu_573_p3[1:0];

assign trunc_ln164_fu_694_p1 = grp_fu_683_p2[2:0];

assign trunc_ln166_fu_830_p1 = udiv_ln166_reg_1106[4:0];

assign type_read_read_fu_106_p2 = type_r;

assign xor_ln184_1_fu_901_p2 = (word_load_14_reg_1156 ^ ap_phi_reg_pp1_iter3_temp_1_0_reg_489);

assign xor_ln184_2_fu_906_p2 = (word_load_15_reg_1166 ^ ap_phi_reg_pp1_iter3_temp_2_0_reg_478);

assign xor_ln184_3_fu_911_p2 = (word_load_16_reg_1171 ^ ap_phi_reg_pp1_iter3_temp_3_0_reg_467);

assign xor_ln184_fu_895_p2 = (word_load_reg_1151 ^ ap_phi_reg_pp1_iter3_temp_0_0_reg_500);

assign zext_ln101_fu_534_p1 = ap_phi_mux_nk_phi_fu_361_p18;

assign zext_ln154_fu_538_p1 = ap_phi_mux_nk_phi_fu_361_p18;

assign zext_ln157_1_fu_633_p1 = tmp_1_fu_626_p3;

assign zext_ln157_2_fu_649_p1 = add_ln157_fu_643_p2;

assign zext_ln157_fu_605_p1 = add_ln_fu_597_p3;

assign zext_ln166_1_fu_839_p1 = add_ln166_fu_833_p2;

assign zext_ln166_fu_780_p1 = word_q0;

assign zext_ln167_fu_785_p1 = word_q1;

assign zext_ln168_fu_800_p1 = word_q0;

assign zext_ln169_fu_805_p1 = word_q1;

assign zext_ln174_1_fu_730_p1 = idxprom22_fu_720_p2;

assign zext_ln174_2_fu_740_p1 = add_ln174_fu_734_p2;

assign zext_ln174_fu_726_p1 = idxprom22_fu_720_p2;

assign zext_ln175_fu_751_p1 = add_ln175_fu_745_p2;

assign zext_ln176_fu_765_p1 = add_ln176_fu_760_p2;

assign zext_ln181_1_fu_770_p1 = word_q0;

assign zext_ln181_2_fu_775_p1 = word_q1;

assign zext_ln181_3_fu_795_p1 = word_q0;

assign zext_ln181_fu_790_p1 = word_q1;

assign zext_ln184_1_fu_853_p1 = add_ln184_1_fu_847_p2;

assign zext_ln184_2_fu_864_p1 = add_ln184_2_fu_858_p2;

assign zext_ln184_3_fu_880_p1 = j_9_reg_457_pp1_iter3_reg;

assign zext_ln184_4_fu_922_p1 = add_ln184_3_fu_917_p2;

assign zext_ln184_5_fu_932_p1 = add_ln184_4_fu_927_p2;

assign zext_ln184_6_fu_890_p1 = add_ln184_5_fu_884_p2;

assign zext_ln184_fu_825_p1 = add_ln184_fu_819_p2;

always @ (posedge ap_clk) begin
    zext_ln101_reg_941[6:4] <= 3'b000;
    zext_ln154_reg_948[7:4] <= 4'b0000;
    tmp_s_reg_953[1:0] <= 2'b00;
    j_9_cast_reg_1003[7] <= 1'b0;
    j_9_cast_reg_1003_pp1_iter1_reg[7] <= 1'b0;
    j_9_cast_reg_1003_pp1_iter2_reg[7] <= 1'b0;
    j_9_cast_reg_1003_pp1_iter3_reg[7] <= 1'b0;
    zext_ln174_reg_1031[8:7] <= 2'b00;
    zext_ln184_3_reg_1176[8:7] <= 2'b00;
    nb_reg_325[0] <= 1'b0;
    nk_reg_358[0] <= 1'b0;
    round_val_reg_391[0] <= 1'b1;
    round_val_reg_391[3] <= 1'b1;
end

endmodule //aes_encrypt_KeySchedule
