-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
-- Version: 2020.2.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity aes_encrypt_KeySchedule is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    type_r : IN STD_LOGIC_VECTOR (31 downto 0);
    key_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    key_ce0 : OUT STD_LOGIC;
    key_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    word_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    word_ce0 : OUT STD_LOGIC;
    word_we0 : OUT STD_LOGIC;
    word_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    word_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    word_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    word_ce1 : OUT STD_LOGIC;
    word_we1 : OUT STD_LOGIC;
    word_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    word_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of aes_encrypt_KeySchedule is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_pp1_stage2 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_pp1_stage3 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_pp1_stage4 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_pp1_stage5 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_pp1_stage6 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3E900 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000111110100100000000";
    constant ap_const_lv32_3E8C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000111110100011000000";
    constant ap_const_lv32_3E880 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000111110100010000000";
    constant ap_const_lv32_2EF00 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000101110111100000000";
    constant ap_const_lv32_2EEC0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000101110111011000000";
    constant ap_const_lv32_2EE80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000101110111010000000";
    constant ap_const_lv32_1F500 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011111010100000000";
    constant ap_const_lv32_1F4C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011111010011000000";
    constant ap_const_lv32_1F480 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011111010010000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv8_78 : STD_LOGIC_VECTOR (7 downto 0) := "01111000";
    constant ap_const_lv9_F0 : STD_LOGIC_VECTOR (8 downto 0) := "011110000";
    constant ap_const_lv9_168 : STD_LOGIC_VECTOR (8 downto 0) := "101101000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal Sbox_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Sbox_ce0 : STD_LOGIC;
    signal Sbox_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Sbox_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal Sbox_ce1 : STD_LOGIC;
    signal Sbox_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal Rcon0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Rcon0_ce0 : STD_LOGIC;
    signal Rcon0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_reg_424 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_reg_435 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_446 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_9_reg_457 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_9_reg_457_pp1_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state26_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal j_9_reg_457_pp1_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal j_9_reg_457_pp1_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal reg_511 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp1_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage6 : signal is "none";
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_block_state11_pp1_stage6_iter0 : BOOLEAN;
    signal ap_block_state18_pp1_stage6_iter1 : BOOLEAN;
    signal ap_block_state25_pp1_stage6_iter2 : BOOLEAN;
    signal ap_block_pp1_stage6_11001 : BOOLEAN;
    signal icmp_ln161_reg_1009 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln161_reg_1009_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln164_reg_1018 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln164_reg_1018_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln178_reg_1022 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln178_reg_1022_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_516 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_522 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal reg_528 : STD_LOGIC_VECTOR (7 downto 0);
    signal type_read_read_fu_106_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln101_fu_534_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln101_reg_941 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln154_fu_538_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln154_reg_948 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_542_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_reg_953 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln154_fu_550_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln154_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln154_reg_963 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln102_fu_573_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln102_reg_967 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln102_1_fu_581_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln102_1_reg_972 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln157_fu_589_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln157_reg_978 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln155_fu_610_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul15_fu_662_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul15_reg_993 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal cmp130_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp130_reg_998 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_9_cast_fu_674_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_9_cast_reg_1003 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_9_cast_reg_1003_pp1_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal j_9_cast_reg_1003_pp1_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal j_9_cast_reg_1003_pp1_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln161_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln161_reg_1009_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln161_reg_1009_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_11_fu_688_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_11_reg_1013 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln164_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage3 : signal is "none";
    signal ap_block_state8_pp1_stage3_iter0 : BOOLEAN;
    signal ap_block_state15_pp1_stage3_iter1 : BOOLEAN;
    signal ap_block_state22_pp1_stage3_iter2 : BOOLEAN;
    signal ap_block_state29_pp1_stage3_iter3 : BOOLEAN;
    signal ap_block_pp1_stage3_11001 : BOOLEAN;
    signal and_ln178_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal idxprom22_fu_720_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal idxprom22_reg_1026 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp1_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage4 : signal is "none";
    signal ap_block_state9_pp1_stage4_iter0 : BOOLEAN;
    signal ap_block_state16_pp1_stage4_iter1 : BOOLEAN;
    signal ap_block_state23_pp1_stage4_iter2 : BOOLEAN;
    signal ap_block_pp1_stage4_11001 : BOOLEAN;
    signal zext_ln174_fu_726_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln174_reg_1031 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp1_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage5 : signal is "none";
    signal ap_block_state10_pp1_stage5_iter0 : BOOLEAN;
    signal ap_block_state17_pp1_stage5_iter1 : BOOLEAN;
    signal ap_block_state24_pp1_stage5_iter2 : BOOLEAN;
    signal ap_block_pp1_stage5_11001 : BOOLEAN;
    signal temp_1_1_reg_1056 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_2_1_reg_1061 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_715_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal udiv_ln166_reg_1106 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub158_fu_810_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub158_reg_1121 : STD_LOGIC_VECTOR (7 downto 0);
    signal word_load_reg_1151 : STD_LOGIC_VECTOR (7 downto 0);
    signal word_load_14_reg_1156 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_fu_869_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_block_state6_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_state13_pp1_stage1_iter1 : BOOLEAN;
    signal ap_block_state20_pp1_stage1_iter2 : BOOLEAN;
    signal ap_block_state27_pp1_stage1_iter3 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal word_load_15_reg_1166 : STD_LOGIC_VECTOR (7 downto 0);
    signal word_load_16_reg_1171 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln184_3_fu_880_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln184_3_reg_1176 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp1_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage2 : signal is "none";
    signal ap_block_state7_pp1_stage2_iter0 : BOOLEAN;
    signal ap_block_state14_pp1_stage2_iter1 : BOOLEAN;
    signal ap_block_state21_pp1_stage2_iter2 : BOOLEAN;
    signal ap_block_state28_pp1_stage2_iter3 : BOOLEAN;
    signal ap_block_pp1_stage2_11001 : BOOLEAN;
    signal xor_ln184_1_fu_901_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln184_1_reg_1181 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln184_2_fu_906_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln184_2_reg_1186 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state5 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage6_subdone : BOOLEAN;
    signal ap_block_pp1_stage3_subdone : BOOLEAN;
    signal nb_reg_325 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_nk_phi_fu_361_p18 : STD_LOGIC_VECTOR (3 downto 0);
    signal nk_reg_358 : STD_LOGIC_VECTOR (3 downto 0);
    signal round_val_reg_391 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_j_phi_fu_439_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_j_9_phi_fu_460_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_reg_pp1_iter0_temp_3_0_reg_467 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter1_temp_3_0_reg_467 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter2_temp_3_0_reg_467 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter3_temp_3_0_reg_467 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter0_temp_2_0_reg_478 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter1_temp_2_0_reg_478 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter2_temp_2_0_reg_478 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter3_temp_2_0_reg_478 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter0_temp_1_0_reg_489 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter1_temp_1_0_reg_489 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter2_temp_1_0_reg_489 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter3_temp_1_0_reg_489 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter0_temp_0_0_reg_500 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter1_temp_0_0_reg_500 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter2_temp_0_0_reg_500 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp1_iter3_temp_0_0_reg_500 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln157_fu_605_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln157_2_fu_649_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln174_2_fu_740_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage4 : BOOLEAN;
    signal zext_ln175_fu_751_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln176_fu_765_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage5 : BOOLEAN;
    signal idxprom22_cast_fu_756_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln181_1_fu_770_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln181_2_fu_775_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln166_fu_780_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln167_fu_785_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln181_fu_790_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage6 : BOOLEAN;
    signal zext_ln181_3_fu_795_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln168_fu_800_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln169_fu_805_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom159_fu_814_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_fu_825_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln166_1_fu_839_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_1_fu_853_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_2_fu_864_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom169_fu_875_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage2 : BOOLEAN;
    signal zext_ln184_6_fu_890_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_4_fu_922_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage3 : BOOLEAN;
    signal zext_ln184_5_fu_932_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln184_fu_895_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln184_3_fu_911_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln155_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_10_fu_561_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln157_1_fu_593_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln_fu_597_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_fu_626_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_16_cast_fu_619_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln157_1_fu_633_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln157_fu_637_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln102_1_cast_fu_616_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln157_fu_643_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul15_fu_662_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul15_fu_662_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_683_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_683_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln164_fu_694_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln178_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_715_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln174_1_fu_730_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln174_fu_734_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln175_fu_745_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln176_fu_760_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln184_fu_819_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln166_fu_830_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln166_fu_833_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln184_fu_844_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln184_1_fu_847_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln184_2_fu_858_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal add_ln184_5_fu_884_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln184_3_fu_917_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln184_4_fu_927_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal ap_block_pp1_stage2_subdone : BOOLEAN;
    signal ap_block_pp1_stage4_subdone : BOOLEAN;
    signal ap_block_pp1_stage5_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal mul15_fu_662_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul15_fu_662_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_condition_1016 : BOOLEAN;
    signal ap_condition_1019 : BOOLEAN;
    signal ap_condition_1024 : BOOLEAN;
    signal ap_condition_1027 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component aes_encrypt_mul_4ns_4ns_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component aes_encrypt_urem_7ns_4ns_3_11_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component aes_encrypt_udiv_7ns_4ns_5_11_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component aes_encrypt_KeySchedule_Sbox IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component aes_encrypt_KeySchedule_Rcon0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    Sbox_U : component aes_encrypt_KeySchedule_Sbox
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Sbox_address0,
        ce0 => Sbox_ce0,
        q0 => Sbox_q0,
        address1 => Sbox_address1,
        ce1 => Sbox_ce1,
        q1 => Sbox_q1);

    Rcon0_U : component aes_encrypt_KeySchedule_Rcon0
    generic map (
        DataWidth => 8,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Rcon0_address0,
        ce0 => Rcon0_ce0,
        q0 => Rcon0_q0);

    mul_4ns_4ns_8_1_1_U1 : component aes_encrypt_mul_4ns_4ns_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        dout_WIDTH => 8)
    port map (
        din0 => mul15_fu_662_p0,
        din1 => mul15_fu_662_p1,
        dout => mul15_fu_662_p2);

    urem_7ns_4ns_3_11_1_U2 : component aes_encrypt_urem_7ns_4ns_3_11_1
    generic map (
        ID => 1,
        NUM_STAGE => 11,
        din0_WIDTH => 7,
        din1_WIDTH => 4,
        dout_WIDTH => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_phi_mux_j_9_phi_fu_460_p4,
        din1 => grp_fu_683_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_683_p2);

    udiv_7ns_4ns_5_11_1_U3 : component aes_encrypt_udiv_7ns_4ns_5_11_1
    generic map (
        ID => 1,
        NUM_STAGE => 11,
        din0_WIDTH => 7,
        din1_WIDTH => 4,
        dout_WIDTH => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => j_9_reg_457_pp1_iter1_reg,
        din1 => grp_fu_715_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_715_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and ((type_read_read_fu_106_p2 = ap_const_lv32_1F480) or ((type_read_read_fu_106_p2 = ap_const_lv32_1F4C0) or ((type_read_read_fu_106_p2 = ap_const_lv32_1F500) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EE80) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EEC0) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EF00) or ((type_read_read_fu_106_p2 = ap_const_lv32_3E880) or ((type_read_read_fu_106_p2 = ap_const_lv32_3E8C0) or (type_read_read_fu_106_p2 = ap_const_lv32_3E900))))))))))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and ((type_read_read_fu_106_p2 = ap_const_lv32_1F480) or ((type_read_read_fu_106_p2 = ap_const_lv32_1F4C0) or ((type_read_read_fu_106_p2 = ap_const_lv32_1F500) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EE80) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EEC0) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EF00) or ((type_read_read_fu_106_p2 = ap_const_lv32_3E880) or ((type_read_read_fu_106_p2 = ap_const_lv32_3E8C0) or (type_read_read_fu_106_p2 = ap_const_lv32_3E900))))))))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6))) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp1_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6)))) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter3_temp_0_0_reg_500_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_lv1_0 = and_ln178_reg_1022_pp1_iter2_reg) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_0) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
                ap_phi_reg_pp1_iter3_temp_0_0_reg_500 <= word_q1;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln178_reg_1022_pp1_iter2_reg) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1))) then 
                ap_phi_reg_pp1_iter3_temp_0_0_reg_500 <= Sbox_q1;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (icmp_ln161_reg_1009_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_1))) then 
                ap_phi_reg_pp1_iter3_temp_0_0_reg_500 <= temp_0_fu_869_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
                ap_phi_reg_pp1_iter3_temp_0_0_reg_500 <= ap_phi_reg_pp1_iter2_temp_0_0_reg_500;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter3_temp_1_0_reg_489_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_lv1_0 = and_ln178_reg_1022_pp1_iter2_reg) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_0) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
                ap_phi_reg_pp1_iter3_temp_1_0_reg_489 <= temp_1_1_reg_1056;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln178_reg_1022_pp1_iter2_reg) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1))) then 
                ap_phi_reg_pp1_iter3_temp_1_0_reg_489 <= reg_511;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (icmp_ln161_reg_1009_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_1))) then 
                ap_phi_reg_pp1_iter3_temp_1_0_reg_489 <= reg_516;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
                ap_phi_reg_pp1_iter3_temp_1_0_reg_489 <= ap_phi_reg_pp1_iter2_temp_1_0_reg_489;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter3_temp_2_0_reg_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_lv1_0 = and_ln178_reg_1022_pp1_iter2_reg) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_0) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
                ap_phi_reg_pp1_iter3_temp_2_0_reg_478 <= temp_2_1_reg_1061;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln178_reg_1022_pp1_iter2_reg) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1))) then 
                ap_phi_reg_pp1_iter3_temp_2_0_reg_478 <= reg_516;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (icmp_ln161_reg_1009_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_1))) then 
                ap_phi_reg_pp1_iter3_temp_2_0_reg_478 <= reg_522;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
                ap_phi_reg_pp1_iter3_temp_2_0_reg_478 <= ap_phi_reg_pp1_iter2_temp_2_0_reg_478;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter3_temp_3_0_reg_467_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_lv1_0 = and_ln178_reg_1022_pp1_iter2_reg) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_0) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
                ap_phi_reg_pp1_iter3_temp_3_0_reg_467 <= word_q0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln178_reg_1022_pp1_iter2_reg) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1))) then 
                ap_phi_reg_pp1_iter3_temp_3_0_reg_467 <= Sbox_q0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (icmp_ln161_reg_1009_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_1))) then 
                ap_phi_reg_pp1_iter3_temp_3_0_reg_467 <= reg_528;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
                ap_phi_reg_pp1_iter3_temp_3_0_reg_467 <= ap_phi_reg_pp1_iter2_temp_3_0_reg_467;
            end if; 
        end if;
    end process;

    i_reg_446_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln154_fu_556_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                i_reg_446 <= add_ln155_fu_610_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and ((type_read_read_fu_106_p2 = ap_const_lv32_1F480) or ((type_read_read_fu_106_p2 = ap_const_lv32_1F4C0) or ((type_read_read_fu_106_p2 = ap_const_lv32_1F500) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EE80) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EEC0) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EF00) or ((type_read_read_fu_106_p2 = ap_const_lv32_3E880) or ((type_read_read_fu_106_p2 = ap_const_lv32_3E8C0) or (type_read_read_fu_106_p2 = ap_const_lv32_3E900))))))))))) then 
                i_reg_446 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_424_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln154_fu_556_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                indvar_flatten_reg_424 <= add_ln154_fu_550_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and ((type_read_read_fu_106_p2 = ap_const_lv32_1F480) or ((type_read_read_fu_106_p2 = ap_const_lv32_1F4C0) or ((type_read_read_fu_106_p2 = ap_const_lv32_1F500) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EE80) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EEC0) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EF00) or ((type_read_read_fu_106_p2 = ap_const_lv32_3E880) or ((type_read_read_fu_106_p2 = ap_const_lv32_3E8C0) or (type_read_read_fu_106_p2 = ap_const_lv32_3E900))))))))))) then 
                indvar_flatten_reg_424 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    j_9_reg_457_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                j_9_reg_457 <= zext_ln101_reg_941;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln161_reg_1009 = ap_const_lv1_1))) then 
                j_9_reg_457 <= j_11_reg_1013;
            end if; 
        end if;
    end process;

    j_reg_435_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln154_reg_963 = ap_const_lv1_0))) then 
                j_reg_435 <= select_ln102_1_reg_972;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and ((type_read_read_fu_106_p2 = ap_const_lv32_1F480) or ((type_read_read_fu_106_p2 = ap_const_lv32_1F4C0) or ((type_read_read_fu_106_p2 = ap_const_lv32_1F500) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EE80) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EEC0) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EF00) or ((type_read_read_fu_106_p2 = ap_const_lv32_3E880) or ((type_read_read_fu_106_p2 = ap_const_lv32_3E8C0) or (type_read_read_fu_106_p2 = ap_const_lv32_3E900))))))))))) then 
                j_reg_435 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    nb_reg_325_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_1F480)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_2EE80)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_3E880)))) then 
                nb_reg_325(1) <= '0';
                nb_reg_325(2) <= '1';
                nb_reg_325(3) <= '0';
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_1F4C0)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_2EEC0)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_3E8C0)))) then 
                nb_reg_325(1) <= '1';
                nb_reg_325(2) <= '1';
                nb_reg_325(3) <= '0';
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_1F500)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_2EF00)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_3E900)))) then 
                nb_reg_325(1) <= '0';
                nb_reg_325(2) <= '0';
                nb_reg_325(3) <= '1';
            end if; 
        end if;
    end process;

    nk_reg_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_1F480)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_1F4C0)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_1F500)))) then 
                nk_reg_358(1) <= '0';
                nk_reg_358(2) <= '1';
                nk_reg_358(3) <= '0';
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_2EE80)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_2EEC0)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_2EF00)))) then 
                nk_reg_358(1) <= '1';
                nk_reg_358(2) <= '1';
                nk_reg_358(3) <= '0';
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_3E880)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_3E8C0)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_3E900)))) then 
                nk_reg_358(1) <= '0';
                nk_reg_358(2) <= '0';
                nk_reg_358(3) <= '1';
            end if; 
        end if;
    end process;

    round_val_reg_391_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_1F480))) then 
                round_val_reg_391(1) <= '1';
                round_val_reg_391(2) <= '0';
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_1F4C0)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_2EE80)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_2EEC0)))) then 
                round_val_reg_391(1) <= '0';
                round_val_reg_391(2) <= '1';
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_1F500)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_2EF00)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_3E880)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_3E8C0)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and (type_read_read_fu_106_p2 = ap_const_lv32_3E900)))) then 
                round_val_reg_391(1) <= '1';
                round_val_reg_391(2) <= '1';
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (icmp_ln164_fu_698_p2 = ap_const_lv1_0) and (icmp_ln161_reg_1009_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3))) then
                and_ln178_reg_1022 <= and_ln178_fu_710_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3))) then
                and_ln178_reg_1022_pp1_iter2_reg <= and_ln178_reg_1022;
                icmp_ln164_reg_1018_pp1_iter2_reg <= icmp_ln164_reg_1018;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6))) then
                ap_phi_reg_pp1_iter1_temp_0_0_reg_500 <= ap_phi_reg_pp1_iter0_temp_0_0_reg_500;
                ap_phi_reg_pp1_iter1_temp_1_0_reg_489 <= ap_phi_reg_pp1_iter0_temp_1_0_reg_489;
                ap_phi_reg_pp1_iter1_temp_2_0_reg_478 <= ap_phi_reg_pp1_iter0_temp_2_0_reg_478;
                ap_phi_reg_pp1_iter1_temp_3_0_reg_467 <= ap_phi_reg_pp1_iter0_temp_3_0_reg_467;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6))) then
                ap_phi_reg_pp1_iter2_temp_0_0_reg_500 <= ap_phi_reg_pp1_iter1_temp_0_0_reg_500;
                ap_phi_reg_pp1_iter2_temp_1_0_reg_489 <= ap_phi_reg_pp1_iter1_temp_1_0_reg_489;
                ap_phi_reg_pp1_iter2_temp_2_0_reg_478 <= ap_phi_reg_pp1_iter1_temp_2_0_reg_478;
                ap_phi_reg_pp1_iter2_temp_3_0_reg_467 <= ap_phi_reg_pp1_iter1_temp_3_0_reg_467;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                cmp130_reg_998 <= cmp130_fu_668_p2;
                mul15_reg_993 <= mul15_fu_662_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln154_reg_963 <= icmp_ln154_fu_556_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln161_reg_1009 <= icmp_ln161_fu_678_p2;
                icmp_ln161_reg_1009_pp1_iter1_reg <= icmp_ln161_reg_1009;
                icmp_ln161_reg_1009_pp1_iter2_reg <= icmp_ln161_reg_1009_pp1_iter1_reg;
                icmp_ln161_reg_1009_pp1_iter3_reg <= icmp_ln161_reg_1009_pp1_iter2_reg;
                    j_9_cast_reg_1003(6 downto 0) <= j_9_cast_fu_674_p1(6 downto 0);
                    j_9_cast_reg_1003_pp1_iter1_reg(6 downto 0) <= j_9_cast_reg_1003(6 downto 0);
                    j_9_cast_reg_1003_pp1_iter2_reg(6 downto 0) <= j_9_cast_reg_1003_pp1_iter1_reg(6 downto 0);
                    j_9_cast_reg_1003_pp1_iter3_reg(6 downto 0) <= j_9_cast_reg_1003_pp1_iter2_reg(6 downto 0);
                j_9_reg_457_pp1_iter1_reg <= j_9_reg_457;
                j_9_reg_457_pp1_iter2_reg <= j_9_reg_457_pp1_iter1_reg;
                j_9_reg_457_pp1_iter3_reg <= j_9_reg_457_pp1_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (icmp_ln161_reg_1009_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3))) then
                icmp_ln164_reg_1018 <= icmp_ln164_fu_698_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1))) then
                idxprom22_reg_1026 <= idxprom22_fu_720_p2;
                    zext_ln174_reg_1031(6 downto 0) <= zext_ln174_fu_726_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (icmp_ln161_reg_1009 = ap_const_lv1_1))) then
                j_11_reg_1013 <= j_11_fu_688_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_1) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln178_reg_1022_pp1_iter2_reg) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)))) then
                reg_511 <= Sbox_q1;
                reg_516 <= Sbox_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_1) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln178_reg_1022_pp1_iter2_reg) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1)))) then
                reg_522 <= Sbox_q1;
                reg_528 <= Sbox_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln154_fu_556_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                select_ln102_1_reg_972 <= select_ln102_1_fu_581_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln154_fu_556_p2 = ap_const_lv1_0))) then
                select_ln102_reg_967 <= select_ln102_fu_573_p3;
                trunc_ln157_reg_978 <= trunc_ln157_fu_589_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1))) then
                sub158_reg_1121 <= sub158_fu_810_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then
                temp_1_1_reg_1056 <= word_q0;
                temp_2_1_reg_1061 <= word_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and ((type_read_read_fu_106_p2 = ap_const_lv32_1F480) or ((type_read_read_fu_106_p2 = ap_const_lv32_1F4C0) or ((type_read_read_fu_106_p2 = ap_const_lv32_1F500) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EE80) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EEC0) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EF00) or ((type_read_read_fu_106_p2 = ap_const_lv32_3E880) or ((type_read_read_fu_106_p2 = ap_const_lv32_3E8C0) or (type_read_read_fu_106_p2 = ap_const_lv32_3E900))))))))))) then
                    tmp_s_reg_953(5 downto 2) <= tmp_s_fu_542_p3(5 downto 2);
                    zext_ln101_reg_941(3 downto 0) <= zext_ln101_fu_534_p1(3 downto 0);
                    zext_ln154_reg_948(3 downto 0) <= zext_ln154_fu_538_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_1) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1))) then
                udiv_ln166_reg_1106 <= grp_fu_715_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1))) then
                word_load_14_reg_1156 <= word_q1;
                word_load_reg_1151 <= word_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (icmp_ln161_reg_1009_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then
                word_load_15_reg_1166 <= word_q1;
                word_load_16_reg_1171 <= word_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (icmp_ln161_reg_1009_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then
                xor_ln184_1_reg_1181 <= xor_ln184_1_fu_901_p2;
                xor_ln184_2_reg_1186 <= xor_ln184_2_fu_906_p2;
                    zext_ln184_3_reg_1176(6 downto 0) <= zext_ln184_3_fu_880_p1(6 downto 0);
            end if;
        end if;
    end process;
    zext_ln101_reg_941(6 downto 4) <= "000";
    zext_ln154_reg_948(7 downto 4) <= "0000";
    tmp_s_reg_953(1 downto 0) <= "00";
    j_9_cast_reg_1003(7) <= '0';
    j_9_cast_reg_1003_pp1_iter1_reg(7) <= '0';
    j_9_cast_reg_1003_pp1_iter2_reg(7) <= '0';
    j_9_cast_reg_1003_pp1_iter3_reg(7) <= '0';
    zext_ln174_reg_1031(8 downto 7) <= "00";
    zext_ln184_3_reg_1176(8 downto 7) <= "00";
    nb_reg_325(0) <= '0';
    nk_reg_358(0) <= '0';
    round_val_reg_391(0) <= '1';
    round_val_reg_391(3) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, type_read_read_fu_106_p2, ap_enable_reg_pp0_iter0, icmp_ln154_fu_556_p2, icmp_ln161_fu_678_p2, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage3, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_block_pp1_stage6_subdone, ap_block_pp1_stage3_subdone, ap_block_pp1_stage1_subdone, ap_block_pp1_stage2_subdone, ap_block_pp1_stage4_subdone, ap_block_pp1_stage5_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and ((type_read_read_fu_106_p2 = ap_const_lv32_1F480) or ((type_read_read_fu_106_p2 = ap_const_lv32_1F4C0) or ((type_read_read_fu_106_p2 = ap_const_lv32_1F500) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EE80) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EEC0) or ((type_read_read_fu_106_p2 = ap_const_lv32_2EF00) or ((type_read_read_fu_106_p2 = ap_const_lv32_3E880) or ((type_read_read_fu_106_p2 = ap_const_lv32_3E8C0) or (type_read_read_fu_106_p2 = ap_const_lv32_3E900))))))))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not((type_read_read_fu_106_p2 = ap_const_lv32_1F480)) and not((type_read_read_fu_106_p2 = ap_const_lv32_1F4C0)) and not((type_read_read_fu_106_p2 = ap_const_lv32_1F500)) and not((type_read_read_fu_106_p2 = ap_const_lv32_2EE80)) and not((type_read_read_fu_106_p2 = ap_const_lv32_2EEC0)) and not((type_read_read_fu_106_p2 = ap_const_lv32_2EF00)) and not((type_read_read_fu_106_p2 = ap_const_lv32_3E880)) and not((type_read_read_fu_106_p2 = ap_const_lv32_3E8C0)) and not((type_read_read_fu_106_p2 = ap_const_lv32_3E900)) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln154_fu_556_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln154_fu_556_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln161_fu_678_p2 = ap_const_lv1_0))) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln161_fu_678_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_pp1_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                end if;
            when ap_ST_fsm_pp1_stage3 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp1_stage3_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                end if;
            when ap_ST_fsm_pp1_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                end if;
            when ap_ST_fsm_pp1_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
                end if;
            when ap_ST_fsm_pp1_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage6;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    Rcon0_address0 <= zext_ln166_1_fu_839_p1(5 - 1 downto 0);

    Rcon0_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            Rcon0_ce0 <= ap_const_logic_1;
        else 
            Rcon0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Sbox_address0_assign_proc : process(ap_enable_reg_pp1_iter2, icmp_ln161_reg_1009_pp1_iter2_reg, zext_ln181_2_fu_775_p1, zext_ln167_fu_785_p1, zext_ln181_3_fu_795_p1, zext_ln169_fu_805_p1, ap_condition_1016, ap_condition_1019, ap_condition_1024, ap_condition_1027)
    begin
        if (((icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_1027)) then 
                Sbox_address0 <= zext_ln169_fu_805_p1(8 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1024)) then 
                Sbox_address0 <= zext_ln181_3_fu_795_p1(8 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1019)) then 
                Sbox_address0 <= zext_ln167_fu_785_p1(8 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1016)) then 
                Sbox_address0 <= zext_ln181_2_fu_775_p1(8 - 1 downto 0);
            else 
                Sbox_address0 <= "XXXXXXXX";
            end if;
        else 
            Sbox_address0 <= "XXXXXXXX";
        end if; 
    end process;


    Sbox_address1_assign_proc : process(ap_enable_reg_pp1_iter2, icmp_ln161_reg_1009_pp1_iter2_reg, zext_ln181_1_fu_770_p1, zext_ln166_fu_780_p1, zext_ln181_fu_790_p1, zext_ln168_fu_800_p1, ap_condition_1016, ap_condition_1019, ap_condition_1024, ap_condition_1027)
    begin
        if (((icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_1027)) then 
                Sbox_address1 <= zext_ln168_fu_800_p1(8 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1024)) then 
                Sbox_address1 <= zext_ln181_fu_790_p1(8 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1019)) then 
                Sbox_address1 <= zext_ln166_fu_780_p1(8 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1016)) then 
                Sbox_address1 <= zext_ln181_1_fu_770_p1(8 - 1 downto 0);
            else 
                Sbox_address1 <= "XXXXXXXX";
            end if;
        else 
            Sbox_address1 <= "XXXXXXXX";
        end if; 
    end process;


    Sbox_ce0_assign_proc : process(ap_CS_fsm_pp1_stage6, ap_enable_reg_pp1_iter2, ap_block_pp1_stage6_11001, icmp_ln161_reg_1009_pp1_iter2_reg, icmp_ln164_reg_1018_pp1_iter2_reg, and_ln178_reg_1022_pp1_iter2_reg, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_1) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln178_reg_1022_pp1_iter2_reg) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_1) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln178_reg_1022_pp1_iter2_reg) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)))) then 
            Sbox_ce0 <= ap_const_logic_1;
        else 
            Sbox_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Sbox_ce1_assign_proc : process(ap_CS_fsm_pp1_stage6, ap_enable_reg_pp1_iter2, ap_block_pp1_stage6_11001, icmp_ln161_reg_1009_pp1_iter2_reg, icmp_ln164_reg_1018_pp1_iter2_reg, and_ln178_reg_1022_pp1_iter2_reg, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_1) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln178_reg_1022_pp1_iter2_reg) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_1) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln178_reg_1022_pp1_iter2_reg) and (icmp_ln161_reg_1009_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)))) then 
            Sbox_ce1 <= ap_const_logic_1;
        else 
            Sbox_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln154_fu_550_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_424) + unsigned(ap_const_lv6_1));
    add_ln155_fu_610_p2 <= std_logic_vector(unsigned(select_ln102_fu_573_p3) + unsigned(ap_const_lv3_1));
    add_ln157_fu_643_p2 <= std_logic_vector(unsigned(sub_ln157_fu_637_p2) + unsigned(select_ln102_1_cast_fu_616_p1));
    add_ln166_fu_833_p2 <= std_logic_vector(unsigned(trunc_ln166_fu_830_p1) + unsigned(ap_const_lv5_1F));
    add_ln174_fu_734_p2 <= std_logic_vector(unsigned(zext_ln174_1_fu_730_p1) + unsigned(ap_const_lv8_78));
    add_ln175_fu_745_p2 <= std_logic_vector(unsigned(zext_ln174_fu_726_p1) + unsigned(ap_const_lv9_F0));
    add_ln176_fu_760_p2 <= std_logic_vector(unsigned(zext_ln174_reg_1031) + unsigned(ap_const_lv9_168));
    add_ln184_1_fu_847_p2 <= std_logic_vector(signed(sext_ln184_fu_844_p1) + signed(ap_const_lv9_F0));
    add_ln184_2_fu_858_p2 <= std_logic_vector(signed(sext_ln184_fu_844_p1) + signed(ap_const_lv9_168));
    add_ln184_3_fu_917_p2 <= std_logic_vector(unsigned(j_9_cast_reg_1003_pp1_iter3_reg) + unsigned(ap_const_lv8_78));
    add_ln184_4_fu_927_p2 <= std_logic_vector(unsigned(zext_ln184_3_reg_1176) + unsigned(ap_const_lv9_F0));
    add_ln184_5_fu_884_p2 <= std_logic_vector(unsigned(zext_ln184_3_fu_880_p1) + unsigned(ap_const_lv9_168));
    add_ln184_fu_819_p2 <= std_logic_vector(signed(sub158_fu_810_p2) + signed(ap_const_lv8_78));
    add_ln_fu_597_p3 <= (trunc_ln157_1_fu_593_p1 & trunc_ln157_fu_589_p1);
    and_ln178_fu_710_p2 <= (icmp_ln178_fu_704_p2 and cmp130_reg_998);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(4);
    ap_CS_fsm_pp1_stage2 <= ap_CS_fsm(5);
    ap_CS_fsm_pp1_stage3 <= ap_CS_fsm(6);
    ap_CS_fsm_pp1_stage4 <= ap_CS_fsm(7);
    ap_CS_fsm_pp1_stage5 <= ap_CS_fsm(8);
    ap_CS_fsm_pp1_stage6 <= ap_CS_fsm(9);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state30 <= ap_CS_fsm(10);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp1_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp1_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1016_assign_proc : process(icmp_ln164_reg_1018_pp1_iter2_reg, and_ln178_reg_1022_pp1_iter2_reg, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5)
    begin
                ap_condition_1016 <= ((ap_const_boolean_0 = ap_block_pp1_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln178_reg_1022_pp1_iter2_reg));
    end process;


    ap_condition_1019_assign_proc : process(icmp_ln164_reg_1018_pp1_iter2_reg, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5)
    begin
                ap_condition_1019 <= ((ap_const_boolean_0 = ap_block_pp1_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_1024_assign_proc : process(ap_CS_fsm_pp1_stage6, icmp_ln164_reg_1018_pp1_iter2_reg, and_ln178_reg_1022_pp1_iter2_reg, ap_block_pp1_stage6)
    begin
                ap_condition_1024 <= ((ap_const_boolean_0 = ap_block_pp1_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln178_reg_1022_pp1_iter2_reg));
    end process;


    ap_condition_1027_assign_proc : process(ap_CS_fsm_pp1_stage6, icmp_ln164_reg_1018_pp1_iter2_reg, ap_block_pp1_stage6)
    begin
                ap_condition_1027 <= ((ap_const_boolean_0 = ap_block_pp1_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (icmp_ln164_reg_1018_pp1_iter2_reg = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln154_fu_556_p2)
    begin
        if ((icmp_ln154_fu_556_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state5_assign_proc : process(icmp_ln161_fu_678_p2)
    begin
        if ((icmp_ln161_fu_678_p2 = ap_const_lv1_0)) then 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state30)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_j_9_phi_fu_460_p4_assign_proc : process(j_9_reg_457, ap_CS_fsm_pp1_stage0, icmp_ln161_reg_1009, j_11_reg_1013, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln161_reg_1009 = ap_const_lv1_1))) then 
            ap_phi_mux_j_9_phi_fu_460_p4 <= j_11_reg_1013;
        else 
            ap_phi_mux_j_9_phi_fu_460_p4 <= j_9_reg_457;
        end if; 
    end process;


    ap_phi_mux_j_phi_fu_439_p4_assign_proc : process(j_reg_435, ap_CS_fsm_pp0_stage0, icmp_ln154_reg_963, select_ln102_1_reg_972, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln154_reg_963 = ap_const_lv1_0))) then 
            ap_phi_mux_j_phi_fu_439_p4 <= select_ln102_1_reg_972;
        else 
            ap_phi_mux_j_phi_fu_439_p4 <= j_reg_435;
        end if; 
    end process;


    ap_phi_mux_nk_phi_fu_361_p18_assign_proc : process(ap_CS_fsm_state1, type_read_read_fu_106_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (type_read_read_fu_106_p2 = ap_const_lv32_1F480)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (type_read_read_fu_106_p2 = ap_const_lv32_1F4C0)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (type_read_read_fu_106_p2 = ap_const_lv32_1F500)))) then 
            ap_phi_mux_nk_phi_fu_361_p18 <= ap_const_lv4_4;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and (type_read_read_fu_106_p2 = ap_const_lv32_2EE80)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (type_read_read_fu_106_p2 = ap_const_lv32_2EEC0)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (type_read_read_fu_106_p2 = ap_const_lv32_2EF00)))) then 
            ap_phi_mux_nk_phi_fu_361_p18 <= ap_const_lv4_6;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and (type_read_read_fu_106_p2 = ap_const_lv32_3E880)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (type_read_read_fu_106_p2 = ap_const_lv32_3E8C0)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (type_read_read_fu_106_p2 = ap_const_lv32_3E900)))) then 
            ap_phi_mux_nk_phi_fu_361_p18 <= ap_const_lv4_8;
        else 
            ap_phi_mux_nk_phi_fu_361_p18 <= "XXXX";
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_temp_0_0_reg_500 <= "XXXXXXXX";
    ap_phi_reg_pp1_iter0_temp_1_0_reg_489 <= "XXXXXXXX";
    ap_phi_reg_pp1_iter0_temp_2_0_reg_478 <= "XXXXXXXX";
    ap_phi_reg_pp1_iter0_temp_3_0_reg_467 <= "XXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp130_fu_668_p2 <= "1" when (unsigned(nk_reg_358) > unsigned(ap_const_lv4_6)) else "0";
    grp_fu_683_p1 <= zext_ln101_reg_941(4 - 1 downto 0);
    grp_fu_715_p1 <= zext_ln101_reg_941(4 - 1 downto 0);
    icmp_ln154_fu_556_p2 <= "1" when (indvar_flatten_reg_424 = tmp_s_reg_953) else "0";
    icmp_ln155_fu_567_p2 <= "1" when (i_reg_446 = ap_const_lv3_4) else "0";
    icmp_ln161_fu_678_p2 <= "1" when (unsigned(j_9_cast_fu_674_p1) < unsigned(mul15_reg_993)) else "0";
    icmp_ln164_fu_698_p2 <= "1" when (trunc_ln164_fu_694_p1 = ap_const_lv3_0) else "0";
    icmp_ln178_fu_704_p2 <= "1" when (trunc_ln164_fu_694_p1 = ap_const_lv3_4) else "0";
        idxprom159_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub158_fu_810_p2),64));

    idxprom169_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_9_reg_457_pp1_iter3_reg),64));
    idxprom22_cast_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idxprom22_reg_1026),64));
    idxprom22_fu_720_p2 <= std_logic_vector(unsigned(j_9_reg_457_pp1_iter2_reg) + unsigned(ap_const_lv7_7F));
    j_10_fu_561_p2 <= std_logic_vector(unsigned(ap_phi_mux_j_phi_fu_439_p4) + unsigned(ap_const_lv4_1));
    j_11_fu_688_p2 <= std_logic_vector(unsigned(j_9_reg_457) + unsigned(ap_const_lv7_1));
    j_9_cast_fu_674_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_j_9_phi_fu_460_p4),8));
    key_address0 <= zext_ln157_fu_605_p1(5 - 1 downto 0);

    key_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            key_ce0 <= ap_const_logic_1;
        else 
            key_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mul15_fu_662_p0 <= mul15_fu_662_p00(4 - 1 downto 0);
    mul15_fu_662_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(round_val_reg_391),8));
    mul15_fu_662_p1 <= mul15_fu_662_p10(4 - 1 downto 0);
    mul15_fu_662_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nb_reg_325),8));
    select_ln102_1_cast_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln102_1_reg_972),9));
    select_ln102_1_fu_581_p3 <= 
        j_10_fu_561_p2 when (icmp_ln155_fu_567_p2(0) = '1') else 
        ap_phi_mux_j_phi_fu_439_p4;
    select_ln102_fu_573_p3 <= 
        ap_const_lv3_0 when (icmp_ln155_fu_567_p2(0) = '1') else 
        i_reg_446;
        sext_ln184_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub158_reg_1121),9));

    sub158_fu_810_p2 <= std_logic_vector(unsigned(j_9_cast_reg_1003_pp1_iter2_reg) - unsigned(zext_ln154_reg_948));
    sub_ln157_fu_637_p2 <= std_logic_vector(unsigned(tmp_16_cast_fu_619_p3) - unsigned(zext_ln157_1_fu_633_p1));
    temp_0_fu_869_p2 <= (reg_511 xor Rcon0_q0);
    tmp_16_cast_fu_619_p3 <= (trunc_ln157_reg_978 & ap_const_lv7_0);
    tmp_1_fu_626_p3 <= (select_ln102_reg_967 & ap_const_lv3_0);
    tmp_s_fu_542_p3 <= (ap_phi_mux_nk_phi_fu_361_p18 & ap_const_lv2_0);
    trunc_ln157_1_fu_593_p1 <= select_ln102_1_fu_581_p3(3 - 1 downto 0);
    trunc_ln157_fu_589_p1 <= select_ln102_fu_573_p3(2 - 1 downto 0);
    trunc_ln164_fu_694_p1 <= grp_fu_683_p2(3 - 1 downto 0);
    trunc_ln166_fu_830_p1 <= udiv_ln166_reg_1106(5 - 1 downto 0);
    type_read_read_fu_106_p2 <= type_r;

    word_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage6, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, zext_ln157_2_fu_649_p1, zext_ln174_2_fu_740_p1, ap_block_pp1_stage4, zext_ln176_fu_765_p1, ap_block_pp1_stage5, ap_block_pp1_stage6, idxprom159_fu_814_p1, zext_ln184_2_fu_864_p1, idxprom169_fu_875_p1, ap_block_pp1_stage2, zext_ln184_4_fu_922_p1, ap_block_pp1_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            word_address0 <= zext_ln184_4_fu_922_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            word_address0 <= idxprom169_fu_875_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            word_address0 <= zext_ln184_2_fu_864_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            word_address0 <= idxprom159_fu_814_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            word_address0 <= zext_ln176_fu_765_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            word_address0 <= zext_ln174_2_fu_740_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            word_address0 <= zext_ln157_2_fu_649_p1(9 - 1 downto 0);
        else 
            word_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    word_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage6, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage0, ap_block_pp1_stage4, zext_ln175_fu_751_p1, ap_block_pp1_stage5, idxprom22_cast_fu_756_p1, ap_block_pp1_stage6, zext_ln184_fu_825_p1, zext_ln184_1_fu_853_p1, ap_block_pp1_stage2, zext_ln184_6_fu_890_p1, ap_block_pp1_stage3, zext_ln184_5_fu_932_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            word_address1 <= zext_ln184_5_fu_932_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            word_address1 <= zext_ln184_6_fu_890_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            word_address1 <= zext_ln184_1_fu_853_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            word_address1 <= zext_ln184_fu_825_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            word_address1 <= idxprom22_cast_fu_756_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            word_address1 <= zext_ln175_fu_751_p1(9 - 1 downto 0);
        else 
            word_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    word_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage6, ap_enable_reg_pp1_iter2, ap_block_pp1_stage6_11001, ap_enable_reg_pp1_iter3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4_11001, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)))) then 
            word_ce0 <= ap_const_logic_1;
        else 
            word_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    word_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage6, ap_enable_reg_pp1_iter2, ap_block_pp1_stage6_11001, ap_enable_reg_pp1_iter3, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4_11001, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)))) then 
            word_ce1 <= ap_const_logic_1;
        else 
            word_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    word_d0_assign_proc : process(key_q0, ap_enable_reg_pp1_iter3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage2, xor_ln184_1_reg_1181, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage2, ap_block_pp1_stage3, xor_ln184_fu_895_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            word_d0 <= xor_ln184_1_reg_1181;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            word_d0 <= xor_ln184_fu_895_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            word_d0 <= key_q0;
        else 
            word_d0 <= "XXXXXXXX";
        end if; 
    end process;


    word_d1_assign_proc : process(ap_enable_reg_pp1_iter3, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage2, xor_ln184_2_reg_1186, ap_block_pp1_stage2, ap_block_pp1_stage3, xor_ln184_3_fu_911_p2)
    begin
        if ((ap_enable_reg_pp1_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3))) then 
                word_d1 <= xor_ln184_2_reg_1186;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then 
                word_d1 <= xor_ln184_3_fu_911_p2;
            else 
                word_d1 <= "XXXXXXXX";
            end if;
        else 
            word_d1 <= "XXXXXXXX";
        end if; 
    end process;


    word_we0_assign_proc : process(ap_enable_reg_pp1_iter3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln154_reg_963, icmp_ln161_reg_1009_pp1_iter3_reg, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (icmp_ln161_reg_1009_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (icmp_ln161_reg_1009_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln154_reg_963 = ap_const_lv1_0)))) then 
            word_we0 <= ap_const_logic_1;
        else 
            word_we0 <= ap_const_logic_0;
        end if; 
    end process;


    word_we1_assign_proc : process(ap_enable_reg_pp1_iter3, icmp_ln161_reg_1009_pp1_iter3_reg, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (icmp_ln161_reg_1009_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (icmp_ln161_reg_1009_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then 
            word_we1 <= ap_const_logic_1;
        else 
            word_we1 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln184_1_fu_901_p2 <= (word_load_14_reg_1156 xor ap_phi_reg_pp1_iter3_temp_1_0_reg_489);
    xor_ln184_2_fu_906_p2 <= (word_load_15_reg_1166 xor ap_phi_reg_pp1_iter3_temp_2_0_reg_478);
    xor_ln184_3_fu_911_p2 <= (word_load_16_reg_1171 xor ap_phi_reg_pp1_iter3_temp_3_0_reg_467);
    xor_ln184_fu_895_p2 <= (word_load_reg_1151 xor ap_phi_reg_pp1_iter3_temp_0_0_reg_500);
    zext_ln101_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_nk_phi_fu_361_p18),7));
    zext_ln154_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_nk_phi_fu_361_p18),8));
    zext_ln157_1_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_626_p3),9));
    zext_ln157_2_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln157_fu_643_p2),64));
    zext_ln157_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln_fu_597_p3),64));
    zext_ln166_1_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln166_fu_833_p2),64));
    zext_ln166_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(word_q0),64));
    zext_ln167_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(word_q1),64));
    zext_ln168_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(word_q0),64));
    zext_ln169_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(word_q1),64));
    zext_ln174_1_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idxprom22_fu_720_p2),8));
    zext_ln174_2_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln174_fu_734_p2),64));
    zext_ln174_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idxprom22_fu_720_p2),9));
    zext_ln175_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln175_fu_745_p2),64));
    zext_ln176_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln176_fu_760_p2),64));
    zext_ln181_1_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(word_q0),64));
    zext_ln181_2_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(word_q1),64));
    zext_ln181_3_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(word_q0),64));
    zext_ln181_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(word_q1),64));
    zext_ln184_1_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln184_1_fu_847_p2),64));
    zext_ln184_2_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln184_2_fu_858_p2),64));
    zext_ln184_3_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_9_reg_457_pp1_iter3_reg),9));
    zext_ln184_4_fu_922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln184_3_fu_917_p2),64));
    zext_ln184_5_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln184_4_fu_927_p2),64));
    zext_ln184_6_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln184_5_fu_884_p2),64));
    zext_ln184_fu_825_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln184_fu_819_p2),64));
end behav;
